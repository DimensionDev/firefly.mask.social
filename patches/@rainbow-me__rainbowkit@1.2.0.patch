diff --git a/dist/components/ConnectButton/ConnectButton.d.ts b/dist/components/ConnectButton/ConnectButton.d.ts
index 39a95f1cfcd2ae28058e52690320886cdcf0d94e..0a333dd50c2170ee336cddd69b33a151952b7013 100644
--- a/dist/components/ConnectButton/ConnectButton.d.ts
+++ b/dist/components/ConnectButton/ConnectButton.d.ts
@@ -1,6 +1,6 @@
 import React from 'react';
 import { ResponsiveValue } from '../../css/sprinkles.css';
-import { ConnectButtonRenderer } from './ConnectButtonRenderer';
+import { ConnectButtonRenderer } from './ConnectButtonRenderer.js';
 type AccountStatus = 'full' | 'avatar' | 'address';
 type ChainStatus = 'full' | 'icon' | 'name' | 'none';
 export interface ConnectButtonProps {
diff --git a/dist/components/ConnectButton/ConnectButtonRenderer.d.ts b/dist/components/ConnectButton/ConnectButtonRenderer.d.ts
index c9f2971a523ed56b65dd3081706f14a0751ec876..764c340bb5c6cf74e4cab10fd4a86359538e2443 100644
--- a/dist/components/ConnectButton/ConnectButtonRenderer.d.ts
+++ b/dist/components/ConnectButton/ConnectButtonRenderer.d.ts
@@ -1,6 +1,7 @@
 import React, { ReactNode } from 'react';
 import { AuthenticationStatus } from '../RainbowKitProvider/AuthenticationContext';
 export interface ConnectButtonRendererProps {
+    className: string
     children: (renderProps: {
         account?: {
             address: string;
diff --git a/dist/components/RainbowKitProvider/RainbowKitProvider.d.ts b/dist/components/RainbowKitProvider/RainbowKitProvider.d.ts
index 933d8b439c9eb53cb2ca549aec534bbc8c818b69..34621e25793ad354675e11359805ba18cd619361 100644
--- a/dist/components/RainbowKitProvider/RainbowKitProvider.d.ts
+++ b/dist/components/RainbowKitProvider/RainbowKitProvider.d.ts
@@ -1,10 +1,10 @@
 import React, { ReactNode } from 'react';
 import { ThemeVars } from '../../css/sprinkles.css';
 import { Locale } from '../../locales';
-import { DisclaimerComponent } from './AppContext';
-import { AvatarComponent } from './AvatarContext';
-import { ModalSizes } from './ModalSizeContext';
-import { RainbowKitChain } from './RainbowKitChainContext';
+import { DisclaimerComponent } from './AppContext.js';
+import { AvatarComponent } from './AvatarContext.js';
+import { ModalSizes } from './ModalSizeContext.js';
+import { RainbowKitChain } from './RainbowKitChainContext.js';
 export declare const useThemeRootProps: () => {
     "data-rk": string;
 };
diff --git a/dist/components/index.d.ts b/dist/components/index.d.ts
index e6bf7a6270102d9e468f607699863a4081ffb7de..d7007b9af2e96c0b41122c0c668b3c036c039928 100644
--- a/dist/components/index.d.ts
+++ b/dist/components/index.d.ts
@@ -1,2 +1,2 @@
-export { ConnectButton } from './ConnectButton/ConnectButton';
-export { RainbowKitProvider } from './RainbowKitProvider/RainbowKitProvider';
+export { ConnectButton } from './ConnectButton/ConnectButton.js';
+export { RainbowKitProvider } from './RainbowKitProvider/RainbowKitProvider.js';
diff --git a/dist/index.d.ts b/dist/index.d.ts
index 96a82b879c7249a5ac9b72128cd6a32792364ff6..a1269d3e06e5474167aa1b0f75be15d59c6890ee 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,20 +1,22 @@
-export * from './components';
-export { getDefaultWallets } from './wallets/getDefaultWallets';
-export { getWalletConnectConnector } from './wallets/getWalletConnectConnector';
-export { connectorsForWallets } from './wallets/connectorsForWallets';
-export { useAccountModal, useChainModal, useConnectModal, } from './components/RainbowKitProvider/ModalContext';
-export { useAddRecentTransaction } from './transactions/useAddRecentTransaction';
-export { RainbowKitAuthenticationProvider, createAuthenticationAdapter, } from './components/RainbowKitProvider/AuthenticationContext';
-export type { Wallet, WalletList } from './wallets/Wallet';
-export type { Chain } from './components/RainbowKitProvider/RainbowKitChainContext';
-export type { Theme } from './components/RainbowKitProvider/RainbowKitProvider';
-export type { AuthenticationStatus, AuthenticationConfig, } from './components/RainbowKitProvider/AuthenticationContext';
-export type { Locale } from './locales/';
-export type { DisclaimerComponent } from './components/RainbowKitProvider/AppContext';
-export type { AvatarComponent } from './components/RainbowKitProvider/AvatarContext';
-export { lightTheme } from './themes/lightTheme';
-export { darkTheme } from './themes/darkTheme';
-export { midnightTheme } from './themes/midnightTheme';
-export { cssStringFromTheme } from './css/cssStringFromTheme';
-export { cssObjectFromTheme } from './css/cssObjectFromTheme';
+export * from './components/index.js';
+export { ConnectButton } from './components/ConnectButton/ConnectButton.js'
+export { RainbowKitProvider } from './components/RainbowKitProvider/RainbowKitProvider.js'
+export { getDefaultWallets } from './wallets/getDefaultWallets.js';
+export { getWalletConnectConnector } from './wallets/getWalletConnectConnector.js';
+export { connectorsForWallets } from './wallets/connectorsForWallets.js';
+export { useAccountModal, useChainModal, useConnectModal, } from './components/RainbowKitProvider/ModalContext.js';
+export { useAddRecentTransaction } from './transactions/useAddRecentTransaction.js';
+export { RainbowKitAuthenticationProvider, createAuthenticationAdapter, } from './components/RainbowKitProvider/AuthenticationContext.js';
+export type { Wallet, WalletList } from './wallets/Wallet.js';
+export type { Chain } from './components/RainbowKitProvider/RainbowKitChainContext.js';
+export type { Theme } from './components/RainbowKitProvider/RainbowKitProvider.js';
+export type { AuthenticationStatus, AuthenticationConfig, } from './components/RainbowKitProvider/AuthenticationContext.js';
+export type { Locale } from './locales/index.js';
+export type { DisclaimerComponent } from './components/RainbowKitProvider/AppContext.js';
+export type { AvatarComponent } from './components/RainbowKitProvider/AvatarContext.js';
+export { lightTheme } from './themes/lightTheme.js';
+export { darkTheme } from './themes/darkTheme.js';
+export { midnightTheme } from './themes/midnightTheme.js';
+export { cssStringFromTheme } from './css/cssStringFromTheme.js';
+export { cssObjectFromTheme } from './css/cssObjectFromTheme.js';
 export { __private__ } from './__private__';
diff --git a/dist/wallets/walletConnectors/index.d.ts b/dist/wallets/walletConnectors/index.d.ts
index 17e07786851af553167921bfd35cd8184eb7ca63..9bebbab6d47e88f66d069e7765284eb49afec258 100644
--- a/dist/wallets/walletConnectors/index.d.ts
+++ b/dist/wallets/walletConnectors/index.d.ts
@@ -1,41 +1,41 @@
-import { argentWallet } from './argentWallet/argentWallet';
-import { bifrostWallet } from './bifrostWallet/bifrostWallet';
-import { bitKeepWallet, bitgetWallet } from './bitgetWallet/bitgetWallet';
-import { bitskiWallet } from './bitskiWallet/bitskiWallet';
-import { braveWallet } from './braveWallet/braveWallet';
-import { clvWallet } from './clvWallet/clvWallet';
-import { coin98Wallet } from './coin98Wallet/coin98Wallet';
-import { coinbaseWallet } from './coinbaseWallet/coinbaseWallet';
-import { coreWallet } from './coreWallet/coreWallet';
-import { dawnWallet } from './dawnWallet/dawnWallet';
-import { desigWallet } from './desigWallet/desigWallet';
-import { enkryptWallet } from './enkryptWallet/enkryptWallet';
-import { foxWallet } from './foxWallet/foxWallet';
-import { frameWallet } from './frameWallet/frameWallet';
-import { frontierWallet } from './frontierWallet/frontierWallet';
-import { imTokenWallet } from './imTokenWallet/imTokenWallet';
-import { injectedWallet } from './injectedWallet/injectedWallet';
-import { ledgerWallet } from './ledgerWallet/ledgerWallet';
-import { metaMaskWallet } from './metaMaskWallet/metaMaskWallet';
-import { mewWallet } from './mewWallet/mewWallet';
-import { oktoWallet } from './oktoWallet/oktoWallet';
-import { okxWallet } from './okxWallet/okxWallet';
-import { omniWallet } from './omniWallet/omniWallet';
-import { oneKeyWallet } from './oneKeyWallet/oneKeyWallet';
-import { phantomWallet } from './phantomWallet/phantomWallet';
-import { rabbyWallet } from './rabbyWallet/rabbyWallet';
-import { rainbowWallet } from './rainbowWallet/rainbowWallet';
-import { safeWallet } from './safeWallet/safeWallet';
-import { safeheronWallet } from './safeheronWallet/safeheronWallet';
-import { safepalWallet } from './safepalWallet/safepalWallet';
-import { subWallet } from './subWallet/subWallet';
-import { tahoWallet } from './tahoWallet/tahoWallet';
-import { talismanWallet } from './talismanWallet/talismanWallet';
-import { tokenPocketWallet } from './tokenPocketWallet/tokenPocketWallet';
-import { trustWallet } from './trustWallet/trustWallet';
-import { uniswapWallet } from './uniswapWallet/uniswapWallet';
-import { walletConnectWallet } from './walletConnectWallet/walletConnectWallet';
-import { xdefiWallet } from './xdefiWallet/xdefiWallet';
-import { zealWallet } from './zealWallet/zealWallet';
-import { zerionWallet } from './zerionWallet/zerionWallet';
+import { argentWallet } from './argentWallet/argentWallet.js';
+import { bifrostWallet } from './bifrostWallet/bifrostWallet.js';
+import { bitKeepWallet, bitgetWallet } from './bitgetWallet/bitgetWallet.js';
+import { bitskiWallet } from './bitskiWallet/bitskiWallet.js';
+import { braveWallet } from './braveWallet/braveWallet.js';
+import { clvWallet } from './clvWallet/clvWallet.js';
+import { coin98Wallet } from './coin98Wallet/coin98Wallet.js';
+import { coinbaseWallet } from './coinbaseWallet/coinbaseWallet.js';
+import { coreWallet } from './coreWallet/coreWallet.js';
+import { dawnWallet } from './dawnWallet/dawnWallet.js';
+import { desigWallet } from './desigWallet/desigWallet.js';
+import { enkryptWallet } from './enkryptWallet/enkryptWallet.js';
+import { foxWallet } from './foxWallet/foxWallet.js';
+import { frameWallet } from './frameWallet/frameWallet.js';
+import { frontierWallet } from './frontierWallet/frontierWallet.js';
+import { imTokenWallet } from './imTokenWallet/imTokenWallet.js';
+import { injectedWallet } from './injectedWallet/injectedWallet.js';
+import { ledgerWallet } from './ledgerWallet/ledgerWallet.js';
+import { metaMaskWallet } from './metaMaskWallet/metaMaskWallet.js';
+import { mewWallet } from './mewWallet/mewWallet.js';
+import { oktoWallet } from './oktoWallet/oktoWallet.js';
+import { okxWallet } from './okxWallet/okxWallet.js';
+import { omniWallet } from './omniWallet/omniWallet.js';
+import { oneKeyWallet } from './oneKeyWallet/oneKeyWallet.js';
+import { phantomWallet } from './phantomWallet/phantomWallet.js';
+import { rabbyWallet } from './rabbyWallet/rabbyWallet.js';
+import { rainbowWallet } from './rainbowWallet/rainbowWallet.js';
+import { safeWallet } from './safeWallet/safeWallet.js';
+import { safeheronWallet } from './safeheronWallet/safeheronWallet.js';
+import { safepalWallet } from './safepalWallet/safepalWallet.js';
+import { subWallet } from './subWallet/subWallet.js';
+import { tahoWallet } from './tahoWallet/tahoWallet.js';
+import { talismanWallet } from './talismanWallet/talismanWallet.js';
+import { tokenPocketWallet } from './tokenPocketWallet/tokenPocketWallet.js';
+import { trustWallet } from './trustWallet/trustWallet.js';
+import { uniswapWallet } from './uniswapWallet/uniswapWallet.js';
+import { walletConnectWallet } from './walletConnectWallet/walletConnectWallet.js';
+import { xdefiWallet } from './xdefiWallet/xdefiWallet.js';
+import { zealWallet } from './zealWallet/zealWallet.js';
+import { zerionWallet } from './zerionWallet/zerionWallet.js';
 export { argentWallet, bifrostWallet, bitgetWallet, bitKeepWallet, bitskiWallet, braveWallet, clvWallet, coin98Wallet, coinbaseWallet, coreWallet, dawnWallet, desigWallet, enkryptWallet, foxWallet, frameWallet, frontierWallet, imTokenWallet, injectedWallet, ledgerWallet, metaMaskWallet, mewWallet, oktoWallet, okxWallet, omniWallet, oneKeyWallet, phantomWallet, rabbyWallet, rainbowWallet, safeWallet, safeheronWallet, safepalWallet, subWallet, tahoWallet, talismanWallet, tokenPocketWallet, trustWallet, uniswapWallet, walletConnectWallet, xdefiWallet, zealWallet, zerionWallet, };
